services:
  db:
    image: postgres:16
    container_name: wallet-db
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432" 
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1" ]
      interval: 2s
      timeout: 2s
      retries: 20

  migrate:
    image: migrate/migrate:latest
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./internal/db/migrations:/migrations:ro
    command: [ "-path", "/migrations", "-database", "postgres://app:app@db:5432/wallet_service?sslmode=disable", "up" ]
  app:
    build:
      context: .
      dockerfile: deploy/docker/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "8080:8080"
    restart: unless-stopped
  dev:
    container_name: dev
    image: golang:1.24.6
    volumes:
      - .:/app
    working_dir: /app
    command: sleep infinity
    networks:
      - default
    depends_on:
      - db
    env_file: .env
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"

volumes:
  dbdata: